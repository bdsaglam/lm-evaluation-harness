{
  "results": {
    "gsm8k_cot_zeroshot": {
      "alias": "gsm8k_cot_zeroshot",
      "exact_match,strict-match": 0.0,
      "exact_match_stderr,strict-match": 0.0,
      "exact_match,flexible-extract": 0.6671721000758151,
      "exact_match_stderr,flexible-extract": 0.012979892496598281
    }
  },
  "group_subtasks": {
    "gsm8k_cot_zeroshot": []
  },
  "configs": {
    "gsm8k_cot_zeroshot": {
      "task": "gsm8k_cot_zeroshot",
      "tag": [
        "math_word_problems"
      ],
      "dataset_path": "gsm8k",
      "dataset_name": "main",
      "training_split": "train",
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Q: {{question}}\nA: Let's think step by step.",
      "doc_to_target": "{{answer}}",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": false,
          "regexes_to_ignore": [
            ",",
            "\\$",
            "(?s).*#### ",
            "\\.$"
          ]
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "Q:",
          "</s>",
          "<|im_end|>"
        ],
        "do_sample": false
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "strict-match",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "The answer is (\\-?[0-9\\.\\,]+)."
            },
            {
              "function": "take_first"
            }
          ]
        },
        {
          "name": "flexible-extract",
          "filter": [
            {
              "function": "regex",
              "group_select": -1,
              "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 3.0
      }
    }
  },
  "versions": {
    "gsm8k_cot_zeroshot": 3.0
  },
  "n-shot": {
    "gsm8k_cot_zeroshot": 0
  },
  "higher_is_better": {
    "gsm8k_cot_zeroshot": {
      "exact_match": true
    }
  },
  "n-samples": {
    "gsm8k_cot_zeroshot": {
      "original": 1319,
      "effective": 1319
    }
  },
  "config": {
    "model": "openai-chat-completions",
    "model_args": "model=qwen-2.5-1.5b,num_concurrent=8,tokenizer=None,base_url=http://0.0.0.0:8002/v1/chat/completions",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "29971faa",
  "date": 1740512648.0289507,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.49.0",
  "upper_git_hash": null,
  "task_hashes": {
    "gsm8k_cot_zeroshot": "77ad80425a4cb85562b27f164a9c92977f775bb66a0ec4d374e4ee7b4656a7f5"
  },
  "model_source": "openai-chat-completions",
  "model_name": "qwen-2.5-1.5b",
  "model_name_sanitized": "qwen-2.5-1.5b",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": "",
  "chat_template_sha": null,
  "start_time": 48206.726770833,
  "end_time": 48598.730196067,
  "total_evaluation_time_seconds": "392.0034252340047"
}