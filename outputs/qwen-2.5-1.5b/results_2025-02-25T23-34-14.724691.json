{
  "results": {
    "gpqa_diamond_cot_n_shot": {
      "alias": "gpqa_diamond_cot_n_shot",
      "exact_match,strict-match": 0.0,
      "exact_match_stderr,strict-match": 0.0,
      "exact_match,flexible-extract": 0.24242424242424243,
      "exact_match_stderr,flexible-extract": 0.03053289223393202
    }
  },
  "group_subtasks": {
    "gpqa_diamond_cot_n_shot": []
  },
  "configs": {
    "gpqa_diamond_cot_n_shot": {
      "task": "gpqa_diamond_cot_n_shot",
      "tag": "gpqa",
      "dataset_path": "Idavidrein/gpqa",
      "dataset_name": "gpqa_diamond",
      "training_split": "train",
      "validation_split": "train",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        choices = [\n            preprocess(doc[\"Incorrect Answer 1\"]),\n            preprocess(doc[\"Incorrect Answer 2\"]),\n            preprocess(doc[\"Incorrect Answer 3\"]),\n            preprocess(doc[\"Correct Answer\"]),\n        ]\n\n        random.shuffle(choices)\n        correct_answer_index = choices.index(preprocess(doc[\"Correct Answer\"]))\n\n        out_doc = {\n            \"choice1\": choices[0],\n            \"choice2\": choices[1],\n            \"choice3\": choices[2],\n            \"choice4\": choices[3],\n            \"choices\": [choices[0], choices[1], choices[2], choices[3]],\n            \"answer\": f\"({chr(65 + correct_answer_index)})\",\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "Question: {{Question}}\nChoices:\n(A) {{choice1}}\n(B) {{choice2}}\n(C) {{choice3}}\n(D) {{choice4}}\nLet's think step by step: ",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "Here are some example questions from experts. Answer the final question yourself, following the format of the previous questions exactly.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 1,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>"
        ],
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "strict-match",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "(?<=The answer is )(.*)(?=.)"
            },
            {
              "function": "take_first"
            }
          ]
        },
        {
          "name": "flexible-extract",
          "filter": [
            {
              "function": "multi_choice_regex",
              "group_select": -1,
              "ignore_case": true,
              "ignore_punctuation": true,
              "regex_pattern": "(\\([A-Z]\\))"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 2.0
      }
    }
  },
  "versions": {
    "gpqa_diamond_cot_n_shot": 2.0
  },
  "n-shot": {
    "gpqa_diamond_cot_n_shot": 1
  },
  "higher_is_better": {
    "gpqa_diamond_cot_n_shot": {
      "exact_match": true
    }
  },
  "n-samples": {
    "gpqa_diamond_cot_n_shot": {
      "original": 198,
      "effective": 198
    }
  },
  "config": {
    "model": "openai-chat-completions",
    "model_args": "model=qwen-2.5-1.5b,num_concurrent=16,tokenizer=None,base_url=http://0.0.0.0:8002/v1/chat/completions",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "29971faa",
  "date": 1740515576.6756444,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.49.0",
  "upper_git_hash": null,
  "task_hashes": {
    "gpqa_diamond_cot_n_shot": "44c8a2867be8d9e84a6d6afe99899821b19075c2843025ae8adb1caa6fc4a0f4"
  },
  "model_source": "openai-chat-completions",
  "model_name": "qwen-2.5-1.5b",
  "model_name_sanitized": "qwen-2.5-1.5b",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": "",
  "chat_template_sha": null,
  "start_time": 51135.249993387,
  "end_time": 51227.042757659,
  "total_evaluation_time_seconds": "91.79276427200239"
}